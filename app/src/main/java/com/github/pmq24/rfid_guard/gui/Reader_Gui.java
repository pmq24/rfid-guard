/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.github.pmq24.rfid_guard.gui;

import com.github.pmq24.rfid_guard.database.Database;
import com.github.pmq24.rfid_guard.database.tag_reads.TagReadRecord;
import com.github.pmq24.rfid_guard.reading.MockedTagReader;
import com.github.pmq24.rfid_guard.reading.TagReadDto;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LLOST
 */
public class Reader_Gui extends javax.swing.JFrame {

    /**
     * Creates new form Reader_Gui
     */
    
    public Reader_Gui() {
        initComponents();
        
    }
    
    public void insert(TagReadRecord record){
        DefaultTableModel model = (DefaultTableModel) tblTagReader.getModel();
        model.addRow(new Object[]{record.getRfid(), record.getTime()});
    }
    
    DefaultTableModel model = new DefaultTableModel();
    
    public Vector createHeader(Object[] columnNames){
        Vector header = new Vector();
        for (Object colName : columnNames){
            header.add(colName);
        }
        return header;
    }

//    public void readDatabase() throws Exception{
//        Database db = new Database();
//        db.getTagReadRepo().readAll();
//        String[] columnNames = {"RFID", "Time", "Status"};
//        Vector header = createHeader(columnNames);
//        
//        if (model.getRowCount() == 0){
//            model = new DefaultTableModel(header,0);
//        }
//        
//        for (TagReadDto trd : TagReadBus.getdb()){
//            
//            Vector row = new Vector();
//            row.add(trd.getRfid());
//            row.add(trd.getTime());
//            
//            model.addRow(row);
//        }
//        
//        tblTagReader.setModel(model);
//    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTagReader = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tblTagReader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RFID", "TIME", "NOTES"
            }
        ));
        jScrollPane2.setViewportView(tblTagReader);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Reader_Gui().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Reader_Gui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTagReader;
    // End of variables declaration//GEN-END:variables
}
